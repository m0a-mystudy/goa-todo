// Code generated by goagen v1.2.0, DO NOT EDIT.
//
// API "Todo API": Application User Types
//
// Command:
// $ goagen
// --design=github.com/m0a-mystudy/goa-todo/design
// --out=$(GOPATH)/src/github.com/m0a-mystudy/goa-todo
// --version=v1.2.0-dirty

package app

import (
	"github.com/goadesign/goa"
	"time"
	"unicode/utf8"
)

// todoPayload user type.
type todoPayload struct {
	Completed *bool      `form:"completed,omitempty" json:"completed,omitempty" xml:"completed,omitempty"`
	Created   *time.Time `form:"created,omitempty" json:"created,omitempty" xml:"created,omitempty"`
	Modified  *time.Time `form:"modified,omitempty" json:"modified,omitempty" xml:"modified,omitempty"`
	Title     *string    `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
}

// Finalize sets the default values for todoPayload type instance.
func (ut *todoPayload) Finalize() {
	var defaultCompleted = false
	if ut.Completed == nil {
		ut.Completed = &defaultCompleted
	}
	var defaultCreated, _ = time.Parse(time.RFC3339, "1978-06-30T10:00:00+09:00")
	if ut.Created == nil {
		ut.Created = &defaultCreated
	}
	var defaultModified, _ = time.Parse(time.RFC3339, "1978-06-30T10:00:00+09:00")
	if ut.Modified == nil {
		ut.Modified = &defaultModified
	}
}

// Validate validates the todoPayload type instance.
func (ut *todoPayload) Validate() (err error) {
	if ut.Title != nil {
		if utf8.RuneCountInString(*ut.Title) < 8 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`response.title`, *ut.Title, utf8.RuneCountInString(*ut.Title), 8, true))
		}
	}
	return
}

// Publicize creates TodoPayload from todoPayload
func (ut *todoPayload) Publicize() *TodoPayload {
	var pub TodoPayload
	if ut.Completed != nil {
		pub.Completed = *ut.Completed
	}
	if ut.Created != nil {
		pub.Created = *ut.Created
	}
	if ut.Modified != nil {
		pub.Modified = *ut.Modified
	}
	if ut.Title != nil {
		pub.Title = ut.Title
	}
	return &pub
}

// TodoPayload user type.
type TodoPayload struct {
	Completed bool      `form:"completed" json:"completed" xml:"completed"`
	Created   time.Time `form:"created" json:"created" xml:"created"`
	Modified  time.Time `form:"modified" json:"modified" xml:"modified"`
	Title     *string   `form:"title,omitempty" json:"title,omitempty" xml:"title,omitempty"`
}

// Validate validates the TodoPayload type instance.
func (ut *TodoPayload) Validate() (err error) {
	if ut.Title != nil {
		if utf8.RuneCountInString(*ut.Title) < 8 {
			err = goa.MergeErrors(err, goa.InvalidLengthError(`response.title`, *ut.Title, utf8.RuneCountInString(*ut.Title), 8, true))
		}
	}
	return
}
